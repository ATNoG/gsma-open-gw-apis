/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
<<<<<<< HEAD
import { Route as ManagementImport } from './routes/management'
import { Route as InfotainmentImport } from './routes/infotainment'
=======
>>>>>>> 1772d87e (demo: changed directory structure)
import { Route as IndexImport } from './routes/index'
import { Route as ManagementIndexImport } from './routes/management/index'
import { Route as InfotainmentIndexImport } from './routes/infotainment/index'
import { Route as InfotainmentVideoIdIndexImport } from './routes/infotainment/$videoId/index'
<<<<<<< HEAD
import { Route as ManagementTruckTruckIdIndexImport } from './routes/management/truck/$truckId/index'
import { Route as InfotainmentauthRegisterIndexImport } from './routes/infotainment/(auth)/register/index'
import { Route as InfotainmentauthLoginIndexImport } from './routes/infotainment/(auth)/login/index'

// Create/Update Routes

const ManagementRoute = ManagementImport.update({
  id: '/management',
  path: '/management',
  getParentRoute: () => rootRoute,
} as any)

const InfotainmentRoute = InfotainmentImport.update({
  id: '/infotainment',
  path: '/infotainment',
  getParentRoute: () => rootRoute,
} as any)

=======
import { Route as authValidateIndexImport } from './routes/(auth)/validate/index'
import { Route as authRegisterIndexImport } from './routes/(auth)/register/index'
import { Route as authLoginIndexImport } from './routes/(auth)/login/index'
import { Route as ManagementTruckTruckIdImport } from './routes/management/truck/$truckId'

// Create/Update Routes

>>>>>>> 1772d87e (demo: changed directory structure)
const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ManagementIndexRoute = ManagementIndexImport.update({
<<<<<<< HEAD
  id: '/',
  path: '/',
  getParentRoute: () => ManagementRoute,
} as any)

const InfotainmentIndexRoute = InfotainmentIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => InfotainmentRoute,
} as any)

const InfotainmentVideoIdIndexRoute = InfotainmentVideoIdIndexImport.update({
  id: '/$videoId/',
  path: '/$videoId/',
  getParentRoute: () => InfotainmentRoute,
} as any)

const ManagementTruckTruckIdIndexRoute =
  ManagementTruckTruckIdIndexImport.update({
    id: '/truck/$truckId/',
    path: '/truck/$truckId/',
    getParentRoute: () => ManagementRoute,
  } as any)

const InfotainmentauthRegisterIndexRoute =
  InfotainmentauthRegisterIndexImport.update({
    id: '/(auth)/register/',
    path: '/register/',
    getParentRoute: () => InfotainmentRoute,
  } as any)

const InfotainmentauthLoginIndexRoute = InfotainmentauthLoginIndexImport.update(
  {
    id: '/(auth)/login/',
    path: '/login/',
    getParentRoute: () => InfotainmentRoute,
  } as any,
)
=======
  id: '/management/',
  path: '/management/',
  getParentRoute: () => rootRoute,
} as any)

const InfotainmentIndexRoute = InfotainmentIndexImport.update({
  id: '/infotainment/',
  path: '/infotainment/',
  getParentRoute: () => rootRoute,
} as any)

const InfotainmentVideoIdIndexRoute = InfotainmentVideoIdIndexImport.update({
  id: '/infotainment/$videoId/',
  path: '/infotainment/$videoId/',
  getParentRoute: () => rootRoute,
} as any)

const authValidateIndexRoute = authValidateIndexImport.update({
  id: '/(auth)/validate/',
  path: '/validate/',
  getParentRoute: () => rootRoute,
} as any)

const authRegisterIndexRoute = authRegisterIndexImport.update({
  id: '/(auth)/register/',
  path: '/register/',
  getParentRoute: () => rootRoute,
} as any)

const authLoginIndexRoute = authLoginIndexImport.update({
  id: '/(auth)/login/',
  path: '/login/',
  getParentRoute: () => rootRoute,
} as any)

const ManagementTruckTruckIdRoute = ManagementTruckTruckIdImport.update({
  id: '/management/truck/$truckId',
  path: '/management/truck/$truckId',
  getParentRoute: () => rootRoute,
} as any)
>>>>>>> 1772d87e (demo: changed directory structure)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
<<<<<<< HEAD
    '/infotainment': {
      id: '/infotainment'
      path: '/infotainment'
      fullPath: '/infotainment'
      preLoaderRoute: typeof InfotainmentImport
      parentRoute: typeof rootRoute
    }
    '/management': {
      id: '/management'
      path: '/management'
      fullPath: '/management'
      preLoaderRoute: typeof ManagementImport
      parentRoute: typeof rootRoute
    }
    '/infotainment/': {
      id: '/infotainment/'
      path: '/'
      fullPath: '/infotainment/'
      preLoaderRoute: typeof InfotainmentIndexImport
      parentRoute: typeof InfotainmentImport
    }
    '/management/': {
      id: '/management/'
      path: '/'
      fullPath: '/management/'
      preLoaderRoute: typeof ManagementIndexImport
      parentRoute: typeof ManagementImport
    }
    '/infotainment/$videoId/': {
      id: '/infotainment/$videoId/'
      path: '/$videoId'
      fullPath: '/infotainment/$videoId'
      preLoaderRoute: typeof InfotainmentVideoIdIndexImport
      parentRoute: typeof InfotainmentImport
    }
    '/infotainment/(auth)/login/': {
      id: '/infotainment/(auth)/login/'
      path: '/login'
      fullPath: '/infotainment/login'
      preLoaderRoute: typeof InfotainmentauthLoginIndexImport
      parentRoute: typeof InfotainmentImport
    }
    '/infotainment/(auth)/register/': {
      id: '/infotainment/(auth)/register/'
      path: '/register'
      fullPath: '/infotainment/register'
      preLoaderRoute: typeof InfotainmentauthRegisterIndexImport
      parentRoute: typeof InfotainmentImport
    }
    '/management/truck/$truckId/': {
      id: '/management/truck/$truckId/'
      path: '/truck/$truckId'
      fullPath: '/management/truck/$truckId'
      preLoaderRoute: typeof ManagementTruckTruckIdIndexImport
      parentRoute: typeof ManagementImport
=======
    '/infotainment/': {
      id: '/infotainment/'
      path: '/infotainment'
      fullPath: '/infotainment'
      preLoaderRoute: typeof InfotainmentIndexImport
      parentRoute: typeof rootRoute
    }
    '/management/': {
      id: '/management/'
      path: '/management'
      fullPath: '/management'
      preLoaderRoute: typeof ManagementIndexImport
      parentRoute: typeof rootRoute
    }
    '/management/truck/$truckId': {
      id: '/management/truck/$truckId'
      path: '/management/truck/$truckId'
      fullPath: '/management/truck/$truckId'
      preLoaderRoute: typeof ManagementTruckTruckIdImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/login/': {
      id: '/(auth)/login/'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof authLoginIndexImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/register/': {
      id: '/(auth)/register/'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof authRegisterIndexImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/validate/': {
      id: '/(auth)/validate/'
      path: '/validate'
      fullPath: '/validate'
      preLoaderRoute: typeof authValidateIndexImport
      parentRoute: typeof rootRoute
    }
    '/infotainment/$videoId/': {
      id: '/infotainment/$videoId/'
      path: '/infotainment/$videoId'
      fullPath: '/infotainment/$videoId'
      preLoaderRoute: typeof InfotainmentVideoIdIndexImport
      parentRoute: typeof rootRoute
>>>>>>> 1772d87e (demo: changed directory structure)
    }
  }
}

// Create and export the route tree

<<<<<<< HEAD
interface InfotainmentRouteChildren {
  InfotainmentIndexRoute: typeof InfotainmentIndexRoute
  InfotainmentVideoIdIndexRoute: typeof InfotainmentVideoIdIndexRoute
  InfotainmentauthLoginIndexRoute: typeof InfotainmentauthLoginIndexRoute
  InfotainmentauthRegisterIndexRoute: typeof InfotainmentauthRegisterIndexRoute
}

const InfotainmentRouteChildren: InfotainmentRouteChildren = {
  InfotainmentIndexRoute: InfotainmentIndexRoute,
  InfotainmentVideoIdIndexRoute: InfotainmentVideoIdIndexRoute,
  InfotainmentauthLoginIndexRoute: InfotainmentauthLoginIndexRoute,
  InfotainmentauthRegisterIndexRoute: InfotainmentauthRegisterIndexRoute,
}

const InfotainmentRouteWithChildren = InfotainmentRoute._addFileChildren(
  InfotainmentRouteChildren,
)

interface ManagementRouteChildren {
  ManagementIndexRoute: typeof ManagementIndexRoute
  ManagementTruckTruckIdIndexRoute: typeof ManagementTruckTruckIdIndexRoute
}

const ManagementRouteChildren: ManagementRouteChildren = {
  ManagementIndexRoute: ManagementIndexRoute,
  ManagementTruckTruckIdIndexRoute: ManagementTruckTruckIdIndexRoute,
}

const ManagementRouteWithChildren = ManagementRoute._addFileChildren(
  ManagementRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/infotainment': typeof InfotainmentRouteWithChildren
  '/management': typeof ManagementRouteWithChildren
  '/infotainment/': typeof InfotainmentIndexRoute
  '/management/': typeof ManagementIndexRoute
  '/infotainment/$videoId': typeof InfotainmentVideoIdIndexRoute
  '/infotainment/login': typeof InfotainmentauthLoginIndexRoute
  '/infotainment/register': typeof InfotainmentauthRegisterIndexRoute
  '/management/truck/$truckId': typeof ManagementTruckTruckIdIndexRoute
=======
export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/infotainment': typeof InfotainmentIndexRoute
  '/management': typeof ManagementIndexRoute
  '/management/truck/$truckId': typeof ManagementTruckTruckIdRoute
  '/login': typeof authLoginIndexRoute
  '/register': typeof authRegisterIndexRoute
  '/validate': typeof authValidateIndexRoute
  '/infotainment/$videoId': typeof InfotainmentVideoIdIndexRoute
>>>>>>> 1772d87e (demo: changed directory structure)
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/infotainment': typeof InfotainmentIndexRoute
  '/management': typeof ManagementIndexRoute
<<<<<<< HEAD
  '/infotainment/$videoId': typeof InfotainmentVideoIdIndexRoute
  '/infotainment/login': typeof InfotainmentauthLoginIndexRoute
  '/infotainment/register': typeof InfotainmentauthRegisterIndexRoute
  '/management/truck/$truckId': typeof ManagementTruckTruckIdIndexRoute
=======
  '/management/truck/$truckId': typeof ManagementTruckTruckIdRoute
  '/login': typeof authLoginIndexRoute
  '/register': typeof authRegisterIndexRoute
  '/validate': typeof authValidateIndexRoute
  '/infotainment/$videoId': typeof InfotainmentVideoIdIndexRoute
>>>>>>> 1772d87e (demo: changed directory structure)
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
<<<<<<< HEAD
  '/infotainment': typeof InfotainmentRouteWithChildren
  '/management': typeof ManagementRouteWithChildren
  '/infotainment/': typeof InfotainmentIndexRoute
  '/management/': typeof ManagementIndexRoute
  '/infotainment/$videoId/': typeof InfotainmentVideoIdIndexRoute
  '/infotainment/(auth)/login/': typeof InfotainmentauthLoginIndexRoute
  '/infotainment/(auth)/register/': typeof InfotainmentauthRegisterIndexRoute
  '/management/truck/$truckId/': typeof ManagementTruckTruckIdIndexRoute
=======
  '/infotainment/': typeof InfotainmentIndexRoute
  '/management/': typeof ManagementIndexRoute
  '/management/truck/$truckId': typeof ManagementTruckTruckIdRoute
  '/(auth)/login/': typeof authLoginIndexRoute
  '/(auth)/register/': typeof authRegisterIndexRoute
  '/(auth)/validate/': typeof authValidateIndexRoute
  '/infotainment/$videoId/': typeof InfotainmentVideoIdIndexRoute
>>>>>>> 1772d87e (demo: changed directory structure)
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/infotainment'
    | '/management'
<<<<<<< HEAD
    | '/infotainment/'
    | '/management/'
    | '/infotainment/$videoId'
    | '/infotainment/login'
    | '/infotainment/register'
    | '/management/truck/$truckId'
=======
    | '/management/truck/$truckId'
    | '/login'
    | '/register'
    | '/validate'
    | '/infotainment/$videoId'
>>>>>>> 1772d87e (demo: changed directory structure)
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/infotainment'
    | '/management'
<<<<<<< HEAD
    | '/infotainment/$videoId'
    | '/infotainment/login'
    | '/infotainment/register'
    | '/management/truck/$truckId'
  id:
    | '__root__'
    | '/'
    | '/infotainment'
    | '/management'
    | '/infotainment/'
    | '/management/'
    | '/infotainment/$videoId/'
    | '/infotainment/(auth)/login/'
    | '/infotainment/(auth)/register/'
    | '/management/truck/$truckId/'
=======
    | '/management/truck/$truckId'
    | '/login'
    | '/register'
    | '/validate'
    | '/infotainment/$videoId'
  id:
    | '__root__'
    | '/'
    | '/infotainment/'
    | '/management/'
    | '/management/truck/$truckId'
    | '/(auth)/login/'
    | '/(auth)/register/'
    | '/(auth)/validate/'
    | '/infotainment/$videoId/'
>>>>>>> 1772d87e (demo: changed directory structure)
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
<<<<<<< HEAD
  InfotainmentRoute: typeof InfotainmentRouteWithChildren
  ManagementRoute: typeof ManagementRouteWithChildren
=======
  InfotainmentIndexRoute: typeof InfotainmentIndexRoute
  ManagementIndexRoute: typeof ManagementIndexRoute
  ManagementTruckTruckIdRoute: typeof ManagementTruckTruckIdRoute
  authLoginIndexRoute: typeof authLoginIndexRoute
  authRegisterIndexRoute: typeof authRegisterIndexRoute
  authValidateIndexRoute: typeof authValidateIndexRoute
  InfotainmentVideoIdIndexRoute: typeof InfotainmentVideoIdIndexRoute
>>>>>>> 1772d87e (demo: changed directory structure)
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
<<<<<<< HEAD
  InfotainmentRoute: InfotainmentRouteWithChildren,
  ManagementRoute: ManagementRouteWithChildren,
=======
  InfotainmentIndexRoute: InfotainmentIndexRoute,
  ManagementIndexRoute: ManagementIndexRoute,
  ManagementTruckTruckIdRoute: ManagementTruckTruckIdRoute,
  authLoginIndexRoute: authLoginIndexRoute,
  authRegisterIndexRoute: authRegisterIndexRoute,
  authValidateIndexRoute: authValidateIndexRoute,
  InfotainmentVideoIdIndexRoute: InfotainmentVideoIdIndexRoute,
>>>>>>> 1772d87e (demo: changed directory structure)
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
<<<<<<< HEAD
        "/infotainment",
        "/management"
=======
        "/infotainment/",
        "/management/",
        "/management/truck/$truckId",
        "/(auth)/login/",
        "/(auth)/register/",
        "/(auth)/validate/",
        "/infotainment/$videoId/"
>>>>>>> 1772d87e (demo: changed directory structure)
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
<<<<<<< HEAD
    "/infotainment": {
      "filePath": "infotainment.tsx",
      "children": [
        "/infotainment/",
        "/infotainment/$videoId/",
        "/infotainment/(auth)/login/",
        "/infotainment/(auth)/register/"
      ]
    },
    "/management": {
      "filePath": "management.tsx",
      "children": [
        "/management/",
        "/management/truck/$truckId/"
      ]
    },
    "/infotainment/": {
      "filePath": "infotainment/index.tsx",
      "parent": "/infotainment"
    },
    "/management/": {
      "filePath": "management/index.tsx",
      "parent": "/management"
    },
    "/infotainment/$videoId/": {
      "filePath": "infotainment/$videoId/index.tsx",
      "parent": "/infotainment"
    },
    "/infotainment/(auth)/login/": {
      "filePath": "infotainment/(auth)/login/index.tsx",
      "parent": "/infotainment"
    },
    "/infotainment/(auth)/register/": {
      "filePath": "infotainment/(auth)/register/index.tsx",
      "parent": "/infotainment"
    },
    "/management/truck/$truckId/": {
      "filePath": "management/truck/$truckId/index.tsx",
      "parent": "/management"
=======
    "/infotainment/": {
      "filePath": "infotainment/index.tsx"
    },
    "/management/": {
      "filePath": "management/index.tsx"
    },
    "/management/truck/$truckId": {
      "filePath": "management/truck/$truckId.tsx"
    },
    "/(auth)/login/": {
      "filePath": "(auth)/login/index.tsx"
    },
    "/(auth)/register/": {
      "filePath": "(auth)/register/index.tsx"
    },
    "/(auth)/validate/": {
      "filePath": "(auth)/validate/index.tsx"
    },
    "/infotainment/$videoId/": {
      "filePath": "infotainment/$videoId/index.tsx"
>>>>>>> 1772d87e (demo: changed directory structure)
    }
  }
}
ROUTE_MANIFEST_END */
